services:
  app:
    build: 
      context: ./docker/php
    volumes:
      - ../laravel:/var/www/laravel
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php/log:/var/log
    environment:
      - APP_DEBUG=${APP_DEBUG:-true}
      - APP_ENV=${APP_ENV:-local}
      - APP_URL=${APP_URL:-http://localhost}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-laravel}
      - DB_USERNAME=${DB_USERNAME:-phper}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
      
  nginx:
    build: 
      context: ./docker/nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_SERVER_NAME=${DOMAIN:-my-domain.local}
    volumes:
      - ./docker/certs/keys:/etc/ssl/certs/nginx:ro,cached
      - ./docker/nginx/default.conf.template:/etc/nginx/templates/default.conf.template
      - ../laravel:/var/www/laravel
    # NGINX の起動条件として「証明書生成処理が正常終了していること」を指定する
    depends_on:
      certs:
        condition: service_completed_successfully

  db:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${DB_DATABASE:-laravel}
      - MYSQL_USER=${DB_USERNAME:-phper}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secret}

  # 証明書を生成する
  certs:
    build: 
      context: .
      dockerfile: ./docker/certs/Dockerfile
    environment:
      - DOMAIN=${DOMAIN:-my-domain.local}
    volumes:
      - ./docker/certs/keys:/app:delegated

volumes:
  # 証明書のファイルはボリュームで共有する
  nginx_certs:
